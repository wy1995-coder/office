<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.office.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.wy.office.bean.Role">
    <id column="rid" jdbcType="INTEGER" property="rid" />
    <result column="rcode" jdbcType="VARCHAR" property="rcode" />
    <result column="rname" jdbcType="VARCHAR" property="rname" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rid, rcode, rname, remark1, remark2
  </sql>
  <select id="selectByExample" parameterType="com.wy.office.bean.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where rid = #{rid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where rid = #{rid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wy.office.bean.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="rid" parameterType="com.wy.office.bean.Role">
    insert into role (rid, rcode, rname, 
      remark1, remark2)
    values (#{rid,jdbcType=INTEGER}, #{rcode,jdbcType=VARCHAR}, #{rname,jdbcType=VARCHAR}, 
      #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wy.office.bean.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        rid,
      </if>
      <if test="rcode != null">
        rcode,
      </if>
      <if test="rname != null">
        rname,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="rcode != null">
        #{rcode,jdbcType=VARCHAR},
      </if>
      <if test="rname != null">
        #{rname,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wy.office.bean.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.rcode != null">
        rcode = #{record.rcode,jdbcType=VARCHAR},
      </if>
      <if test="record.rname != null">
        rname = #{record.rname,jdbcType=VARCHAR},
      </if>
      <if test="record.remark1 != null">
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set rid = #{record.rid,jdbcType=INTEGER},
      rcode = #{record.rcode,jdbcType=VARCHAR},
      rname = #{record.rname,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wy.office.bean.Role">
    update role
    <set>
      <if test="rcode != null">
        rcode = #{rcode,jdbcType=VARCHAR},
      </if>
      <if test="rname != null">
        rname = #{rname,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
    </set>
    where rid = #{rid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wy.office.bean.Role">
    update role
    set rcode = #{rcode,jdbcType=VARCHAR},
      rname = #{rname,jdbcType=VARCHAR},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR}
    where rid = #{rid,jdbcType=INTEGER}
  </update>


  <select id="getRoleByeid" resultMap="BaseResultMap">
    select r.rid, r.rcode, r.rname from role r left join employee_role er on r.rid=er.rid where er.eid=#{eid}
  </select>


  <select id="getRoleList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from role
    <where>
        <if test="rname != null">
          rname like concat ("%", #{rname}, "%")
        </if>
    </where>
  </select>


  <resultMap id="RoleAndPermissionMap" type="role">
    <id property="rid" column="rid"/>
    <result property="rname" column="rname"/>
    <result property="rcode" column="rcode"/>
    <collection property="permissionList" ofType="com.wy.office.bean.Permission">
      <id property="pid" column="pid"/>
      <result property="pname" column="pname"/>
      <result property="parentid" column="parentid"/>
      <result property="pcode" column="pcode"/>
    </collection>
  </resultMap>
  <select id="getRoleAndPermission" resultMap="RoleAndPermissionMap">
    select r.rid, r.rname, r.rcode, p.pid, p.pname, p.pcode, p.parentid
    from permission as p left join role_permission as rp on p.pid=rp.pid
    left join role as r on r.rid=rp.rid
    where r.rid = #{rid}
  </select>
</mapper>